{"version":3,"file":"extension.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,S,SCAzBF,EAAOC,QAAUC,QAAQ,gB,GCCrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,C,uGCtBA,eACA,QAEA,oBAAyBQ,GACxB,IAAIC,EACAC,EAEJ,MAAMC,EAAqB,KACtBF,IAGJA,EAAgBG,EAAOC,OAAOC,oBAAoB,gBAClDL,EAAcM,QAAO,EAGhBC,EAASC,UACd,GAAKP,EAKL,GAFAC,IAEKD,EAAQQ,QAAWR,EAAQQ,KAAK,WAOpCT,EAAcU,MAAK,GACnBV,EAAcW,WAAW,eAAeV,EAAQW,WARA,CAChD,MAAMC,EAAU,oBAAoBZ,EAAQW,MAE5CZ,EAAcU,MAAK,GACnBV,EAAcW,WAAWE,GACzBV,EAAOC,OAAOU,iBAAiB,aAAaD,I,GAOxCE,EAAOC,GAAgBR,UACxBP,GACHM,IAEDL,IACAF,EAAcM,QAEd,MAAMW,EAAMd,EAAOe,UAAUC,mBAAmB,GAAGC,IAAIC,aACjDlB,EAAOmB,SAASC,eAAe,kCAErCtB,EAAUuB,EAAcC,KAAKT,EAC5B,CACCU,IAAKT,IAEN,CAACU,EAAQC,EAAQC,KAChB7B,EAAcU,MAAK,GACfkB,GACH5B,EAAc8B,OAAOF,GAClBC,GACH7B,EAAc8B,OAAOD,GACtB5B,EAAU,IAAI,GACb,EAKJF,EAAQgC,cAAcC,KACrB7B,EAAOmB,SAASW,gBAAgB,qBAAsBlB,EAAI,SAC1DZ,EAAOmB,SAASW,gBAAgB,uBAAwBlB,EAAI,uBAC5DZ,EAAOmB,SAASW,gBAAgB,sBAAuB1B,GAEzD,EAEA,wBAA+B,C","sources":["webpack://jlw-makefile/external commonjs \"vscode\"","webpack://jlw-makefile/external node-commonjs \"child_process\"","webpack://jlw-makefile/webpack/bootstrap","webpack://jlw-makefile/./src/extension.ts"],"sourcesContent":["module.exports = require(\"vscode\");","module.exports = require(\"child_process\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as vscode from 'vscode';\nimport * as child_process from 'child_process';\n\nexport function activate(context: vscode.ExtensionContext) {\n\tlet outputChannel: vscode.OutputChannel;\n\tlet process: child_process.ChildProcess | null;\n\n\tconst setupOutputChannel = () => {\n\t\tif (outputChannel)\n\t\t\treturn;\n\n\t\toutputChannel = vscode.window.createOutputChannel('Make Results');\n\t\toutputChannel.clear();\n\t}\n\n\tconst cancel = async () => {\n\t\tif (!process)\n\t\t\treturn;\n\n\t\tsetupOutputChannel();\n\n\t\tif (!process.kill() && !process.kill('SIGKILL')) {\n\t\t\tconst message = `Cannot kill PID: ${process.pid}`;\n\n\t\t\toutputChannel.show(false);\n\t\t\toutputChannel.appendLine(message);\n\t\t\tvscode.window.showErrorMessage(`Makefile: ${message}`);\n\t\t} else {\n\t\t\toutputChannel.show(true);\n\t\t\toutputChannel.appendLine(`Killed PID: ${process.pid}`);\n\t\t}\n\t};\n\n\tconst run = (cmd: string) => async () => {\n\t\tif (process)\n\t\t\tcancel();\n\n\t\tsetupOutputChannel();\n\t\toutputChannel.clear();\n\n\t\tconst dir = vscode.workspace.workspaceFolders?.[0].uri.fsPath;\n\t\tawait vscode.commands.executeCommand('workbench.action.files.saveAll');\n\n\t\tprocess = child_process.exec(cmd,\n\t\t\t{\n\t\t\t\tcwd: dir,\n\t\t\t},\n\t\t\t(_error, stdout, stderr) => {\n\t\t\t\toutputChannel.show(true);\n\t\t\t\tif (stdout)\n\t\t\t\t\toutputChannel.append(stdout);\n\t\t\t\tif (stderr)\n\t\t\t\t\toutputChannel.append(stderr);\n\t\t\t\tprocess = null;\n\t\t\t});\n\t};\n\n\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('jlw-makefile.build', run('make')),\n\t\tvscode.commands.registerCommand('jlw-makefile.rebuild', run('make clean && make')),\n\t\tvscode.commands.registerCommand('jlw-makefile.cancel', cancel),\n\t);\n}\n\nexport function deactivate() { }\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","context","outputChannel","process","setupOutputChannel","vscode","window","createOutputChannel","clear","cancel","async","kill","show","appendLine","pid","message","showErrorMessage","run","cmd","dir","workspace","workspaceFolders","uri","fsPath","commands","executeCommand","child_process","exec","cwd","_error","stdout","stderr","append","subscriptions","push","registerCommand"],"sourceRoot":""}